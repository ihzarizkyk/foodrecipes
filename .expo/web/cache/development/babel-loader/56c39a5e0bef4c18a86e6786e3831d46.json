{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\n\nvar Recipes = function Recipes(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var getResepData = function getResepData() {\n    var response, json;\n    return _regeneratorRuntime.async(function getResepData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(\"https://masak-apa-tomorisakura.vercel.app/api/recipes\"));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            json = _context.sent;\n            setData(json.results);\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 13:\n            _context.prev = 13;\n            setLoading(false);\n            return _context.finish(13);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10, 13, 16]], Promise);\n  };\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('Detail');\n      },\n      style: styles.container\n    }, React.createElement(Image, {\n      source: {\n        uri: item.thumb\n      },\n      style: {\n        width: 160,\n        height: 160\n      }\n    }), React.createElement(Text, {\n      style: styles.Title\n    }, item.title));\n  };\n\n  useEffect(function () {\n    getResepData();\n  }, []);\n  return React.createElement(View, null, isLoading ? React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: \"#2196F3\"\n  }) : React.createElement(FlatList, {\n    data: data,\n    keyExtractor: function keyExtractor(item) {\n      return item.key;\n    },\n    renderItem: renderItem\n  }));\n};\n\nexport default Recipes;\nvar styles = StyleSheet.create({\n  container: {\n    margin: 1,\n    padding: 20\n  },\n  Title: {\n    margin: 5,\n    fontWeight: 'bold',\n    fontSize: 24\n  }\n});","map":{"version":3,"sources":["/home/ihzarizkyk/Documents/reactnative/foodrecipes/screens/Recipes.js"],"names":["React","useState","useEffect","Recipes","navigation","data","setData","isLoading","setLoading","getResepData","fetch","response","json","results","console","error","renderItem","item","navigate","styles","container","uri","thumb","width","height","Title","title","key","StyleSheet","create","margin","padding","fontWeight","fontSize"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;;;;;;;;AAIA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAiB;AAAA,MAAfC,UAAe,QAAfA,UAAe;;AAC7B,kBAAwBH,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOI,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAgCL,QAAQ,CAAC,IAAD,CAAxC;AAAA;AAAA,MAAOM,SAAP;AAAA,MAAkBC,UAAlB;;AAGA,MAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEUC,KAAK,CAAC,uDAAD,CAFf;;AAAA;AAEPC,YAAAA,QAFO;AAAA;AAAA,6CAGMA,QAAQ,CAACC,IAAT,EAHN;;AAAA;AAGPA,YAAAA,IAHO;AAIbN,YAAAA,OAAO,CAACM,IAAI,CAACC,OAAN,CAAP;AAJa;AAAA;;AAAA;AAAA;AAAA;AAMbC,YAAAA,OAAO,CAACC,KAAR;;AANa;AAAA;AAQbP,YAAAA,UAAU,CAAC,KAAD,CAAV;AARa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAYA,MAAMQ,UAAU,GAAG,SAAbA,UAAa,QAAc;AAAA,QAAXC,IAAW,SAAXA,IAAW;AAC7B,WACI,oBAAC,gBAAD;AAAkB,MAAA,OAAO,EAAE;AAAA,eAAMb,UAAU,CAACc,QAAX,CAAoB,QAApB,CAAN;AAAA,OAA3B;AACI,MAAA,KAAK,EAAEC,MAAM,CAACC;AADlB,OAII,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAE;AAACC,QAAAA,GAAG,EAAEJ,IAAI,CAACK;AAAX,OAAf;AAAoC,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAC,GAAP;AAAYC,QAAAA,MAAM,EAAC;AAAnB;AAA3C,MAJJ,EAKI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEL,MAAM,CAACM;AAApB,OAA4BR,IAAI,CAACS,KAAjC,CALJ,CADJ;AAUH,GAXD;;AAaAxB,EAAAA,SAAS,CAAC,YAAK;AACXO,IAAAA,YAAY;AAEf,GAHQ,EAGN,EAHM,CAAT;AAMA,SACI,oBAAC,IAAD,QAEQF,SAAS,GACL,oBAAC,iBAAD;AAAmB,IAAA,IAAI,EAAC,OAAxB;AAAgC,IAAA,KAAK,EAAC;AAAtC,IADK,GAIL,oBAAC,QAAD;AACA,IAAA,IAAI,EAAEF,IADN;AAEA,IAAA,YAAY,EAAE,sBAAAY,IAAI;AAAA,aAAIA,IAAI,CAACU,GAAT;AAAA,KAFlB;AAGA,IAAA,UAAU,EAAEX;AAHZ,IANZ,CADJ;AAgBH,CApDD;;AAsDA,eAAeb,OAAf;AAEA,IAAMgB,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC7BT,EAAAA,SAAS,EAAE;AACPU,IAAAA,MAAM,EAAE,CADD;AAEPC,IAAAA,OAAO,EAAE;AAFF,GADkB;AAM7BN,EAAAA,KAAK,EAAE;AAEHK,IAAAA,MAAM,EAAC,CAFJ;AAGHE,IAAAA,UAAU,EAAC,MAHR;AAIHC,IAAAA,QAAQ,EAAE;AAJP;AANsB,CAAlB,CAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { StyleSheet, Text, View, ActivityIndicator, Image, ScrollView, TouchableOpacity, FlatList } from 'react-native';\n\n\nconst Recipes = ({navigation}) =>{\n    const [data, setData] = useState([]);\n    const [isLoading, setLoading] = useState(true);\n\n    \n    const getResepData = async () => {\n        try {\n            const response = await fetch(\"https://masak-apa-tomorisakura.vercel.app/api/recipes\");\n            const json = await response.json();\n            setData(json.results);\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const renderItem = ({ item }) => {\n        return (\n            <TouchableOpacity onPress={() => navigation.navigate('Detail')}\n                style={styles.container}\n            >\n                \n                <Image source={{uri: item.thumb }}  style={{width:160, height:160}}/>\n                <Text style={styles.Title}>{item.title}</Text>\n\n            </TouchableOpacity>\n        );\n    };\n\n    useEffect(()=> {\n        getResepData();\n    \n    }, [])\n \n     \n    return(\n        <View>\n            {\n                isLoading ? (\n                    <ActivityIndicator size=\"large\" color=\"#2196F3\"/>\n\n                ):(\n                    <FlatList\n                    data={data}\n                    keyExtractor={item => item.key}\n                    renderItem={renderItem}/>\n                )\n            }\n        \n        </View>\n    )\n}\n\nexport default Recipes;\n\nconst styles = StyleSheet.create({ \n    container: {\n        margin: 1,\n        padding: 20,\n    },\n\n    Title :{\n\n        margin:5,\n        fontWeight:'bold',\n        fontSize: 24\n    }    \n\n})"]},"metadata":{},"sourceType":"module"}